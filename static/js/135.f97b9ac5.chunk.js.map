{"version":3,"file":"static/js/135.f97b9ac5.chunk.js","mappings":"mOACA,EAAsC,0CAAtC,EAA8F,kCAA9F,EAA2I,+BAA3I,EAAyL,mCAAzL,EAAuO,+BAAvO,EAAiR,+BAAjR,EAA2T,+B,kBCmE3T,EA9DqB,WAAO,IAAD,IACnBA,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,IALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GACzBJ,EAASI,EACV,GACF,GAAE,CAACR,IACCG,EAGL,OACE,qBAASM,UAAWC,EAApB,WACE,SAAC,KAAD,CAAMC,GAAE,oBAAEb,EAASc,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAKJ,UAAWC,EAAlD,sBAGA,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXI,IACEX,EAAMY,cACF,kCAAoCZ,EAAMY,cAC1C,mEAENC,IAAKb,EAAMc,SAEb,2BACE,gBAAIR,UAAWC,EAAf,WACE,wBAAKP,EAAMc,SACX,0CAAkBd,EAAMe,oBAE1B,gBAAIT,UAAWC,EAAf,WACE,sCACA,uBAAIP,EAAMgB,eAEZ,gBAAIV,UAAWC,EAAf,WACE,oCACA,uBAAIP,EAAMiB,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,iBAIpD,iBAAKd,UAAWC,EAAhB,WACE,oDACA,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMC,GAAG,UAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C,sLChEKC,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAAcM,IAAI,sBAAuB,CAC9DH,OAAQ,CACNI,KAAM,KAHoB,uBACtB1B,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,qDAShB2B,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAcM,IAAI,gBAAiB,CACxDH,OAAQ,CACNM,MAAAA,KAHyB,uBACrB5B,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfF,EAAY,mCAAG,WAAM+B,GAAN,yFACHV,EAAcM,IAAd,iBAA4BI,IADzB,uBAClB7B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ8B,EAAe,mCAAG,WAAMD,GAAN,yFACNV,EAAcM,IAAd,iBAA4BI,EAA5B,aADM,uBACrB7B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf+B,EAAe,mCAAG,WAAMF,GAAN,yFACNV,EAAcM,IAAd,iBAA4BI,EAA5B,aADM,uBACrB7B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","service/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sectionMovieDetails\":\"MovieDetails_sectionMovieDetails__-th2V\",\"imagePoster\":\"MovieDetails_imagePoster__x7WDV\",\"filmInfo\":\"MovieDetails_filmInfo__uxvgh\",\"addionalInfo\":\"MovieDetails_addionalInfo__Vflvs\",\"linkBack\":\"MovieDetails_linkBack__CKjEq\",\"listItem\":\"MovieDetails_listItem__b-dWX\",\"listInfo\":\"MovieDetails_listInfo__8Bb04\"};","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'service/api';\nimport css from './MovieDetails.module.css';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { idMovie } = useParams();\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieById(idMovie).then(data => {\n      setMovie(data);\n    });\n  }, [idMovie]);\n  if (!movie) {\n    return;\n  }\n  return (\n    <section className={css.sectionMovieDetails}>\n      <Link to={location.state?.from ?? '/'} className={css.linkBack}>\n        Go back\n      </Link>\n      <div className={css.filmInfo}>\n        <img\n          className={css.imagePoster}\n          src={\n            movie.backdrop_path\n              ? 'https://image.tmdb.org/t/p/w500' + movie.backdrop_path\n              : 'https://upload.wikimedia.org/wikipedia/commons/b/b9/No_Cover.jpg'\n          }\n          alt={movie.title}\n        />\n        <ul>\n          <li className={css.listItem}>\n            <h2>{movie.title}</h2>\n            <p>vote average: {movie.vote_average}</p>\n          </li>\n          <li className={css.listItem}>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </li>\n          <li className={css.listItem}>\n            <h3>Genres</h3>\n            <p>{movie.genres.map(({ name }) => name).join(' ')}</p>\n          </li>\n        </ul>\n      </div>\n      <div className={css.addionalInfo}>\n        <h3>Additional information</h3>\n        <ul className={css.listInfo}>\n          <li>\n            <Link to=\"credits\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instanceMovie = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'ac6b50378fc1527039a44b66874fdaf7',\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  const { data } = await instanceMovie.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instanceMovie.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await instanceMovie.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const { data } = await instanceMovie.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await instanceMovie.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n"],"names":["location","useLocation","idMovie","useParams","useState","movie","setMovie","useEffect","getMovieById","then","data","className","css","to","state","from","src","backdrop_path","alt","title","vote_average","overview","genres","map","name","join","Suspense","fallback","Loader","instanceMovie","axios","baseURL","params","api_key","getTrendingMovie","get","page","getMovieByQuery","query","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}