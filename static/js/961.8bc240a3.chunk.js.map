{"version":3,"file":"static/js/961.8bc240a3.chunk.js","mappings":"sMAoDA,UAhDqB,WAAO,IAAD,IACnBA,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,IALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GACzBJ,EAASI,EACV,GACF,GAAE,CAACR,IACCG,EAGL,OACE,iCACE,SAAC,KAAD,CAAMM,GAAE,oBAAEX,EAASY,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,sBACA,gBACEC,IACET,EAAMU,cACF,kCAAoCV,EAAMU,cAC1C,mEAENC,IAAKX,EAAMY,SAEb,4BACE,wBAAKZ,EAAMY,SACX,0CAAkBZ,EAAMa,iBACxB,sCACA,uBAAIb,EAAMc,YACV,oCACA,uBAAId,EAAMe,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,WAEhD,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,UAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,sLChDKC,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAAcM,IAAI,sBAAuB,CAC9DH,OAAQ,CACNI,KAAM,KAHoB,uBACtBvB,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,qDAShBwB,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAcM,IAAI,gBAAiB,CACxDH,OAAQ,CACNM,MAAAA,KAHyB,uBACrBzB,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfF,EAAY,mCAAG,WAAM4B,GAAN,yFACHV,EAAcM,IAAd,iBAA4BI,IADzB,uBAClB1B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ2B,EAAe,mCAAG,WAAMD,GAAN,yFACNV,EAAcM,IAAd,iBAA4BI,EAA5B,aADM,uBACrB1B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf4B,EAAe,mCAAG,WAAMF,GAAN,yFACNV,EAAcM,IAAd,iBAA4BI,EAA5B,aADM,uBACrB1B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","service/api.jsx"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'service/api';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { idMovie } = useParams();\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieById(idMovie).then(data => {\n      setMovie(data);\n    });\n  }, [idMovie]);\n  if (!movie) {\n    return;\n  }\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>Go back</Link>\n      <img\n        src={\n          movie.backdrop_path\n            ? 'https://image.tmdb.org/t/p/w500' + movie.backdrop_path\n            : 'https://upload.wikimedia.org/wikipedia/commons/b/b9/No_Cover.jpg'\n        }\n        alt={movie.title}\n      />\n      <div>\n        <h2>{movie.title}</h2>\n        <p>vote average: {movie.vote_average}</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>{movie.genres.map(({ name }) => name).join(' ')}</p>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"credits\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instanceMovie = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'ac6b50378fc1527039a44b66874fdaf7',\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  const { data } = await instanceMovie.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await instanceMovie.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await instanceMovie.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const { data } = await instanceMovie.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await instanceMovie.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n"],"names":["location","useLocation","idMovie","useParams","useState","movie","setMovie","useEffect","getMovieById","then","data","to","state","from","src","backdrop_path","alt","title","vote_average","overview","genres","map","name","join","Suspense","fallback","instanceMovie","axios","baseURL","params","api_key","getTrendingMovie","get","page","getMovieByQuery","query","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}